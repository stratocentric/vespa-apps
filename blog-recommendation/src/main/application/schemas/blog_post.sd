# Copyright 2017 Yahoo Holdings. Licensed under the terms of the Apache 2.0 license. See LICENSE in the project root.

schema blog_post {

    document blog_post {

        field date_gmt type string {
            indexing: summary
        }

        field language type string {
            indexing: summary
        }

        field author type string {
            indexing: summary
        }

        field url type string {
            indexing: summary
        }

        field title type string {
            indexing: summary | index
        }

	    field blog type string {
	        indexing: summary
	    }

	    field post_id type string {
	        indexing: summary
	    }

        field tags type array<string> {
            indexing: summary
        }

        field blogname type string {
            indexing: summary
        }

        field content type string {
            indexing: summary | index
        }

        field categories type array<string> {
            indexing: summary | index
        }

        field user_item_cf type tensor<float>(d0[1],d1[10]) {
            indexing: summary | attribute
        }

        field has_user_item_cf type byte {
            indexing: summary | attribute
            attribute: fast-search
        }

    }

    fieldset default {
        fields: author,title,tags,blogname,content,categories
    }


    rank-profile tensor {
        first-phase {
            expression: sum(query(user_item_cf) * attribute(user_item_cf))
        }
    }



    # rank profile with neural network model as second phase
    rank-profile nn_tensor {

        # This defines where to get the user latent factor from
        macro input_u() {
            expression: query(user_item_cf)
        }

        # This defines where to get the blog latent factor from
        macro input_d() {
            expression: attribute(user_item_cf)
        }

        # First phase ranking: dot product between latent factors
        first-phase {
            expression: sum(query(user_item_cf) * attribute(user_item_cf))
        }

        # Second phase ranking: neural network based on latent factors
        second-phase {
            rerank-count: 200
            expression: sum(tensorflow("blog/saved"))
        }
    }

}
